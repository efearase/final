Coursera House
==============

На Django реализован сервер управления умным домом, имеющий web-интерфейс для настройки и ручного управления, который будет производить периодический опрос датчиков и осуществлять автоматическую реакцию в случае определенных ситуаций, используя API контроллера умного дома.

Устройства (запись): 
------

    air_conditioner – Кондиционер (true – вкл, false – выкл). При включении постепенно понижает температуру в спальне, пока она не достигнет 16 градусов и сильнее охладить уже не может.
    
    bedroom_light – Лампа в спальне (true – вкл, false – выкл).
    
    bathroom_light – Лампа в ванной (true – вкл, false – выкл).
    
    curtains – Занавески string (“open” – открыть, “close” – закрыть).
    
    boiler – Бойлер (true – вкл, false – выкл). При включении постепенно повышает температуру воды, пока она не достигнет 90 градусов. Для работы должен быть открыт входной кран холодной воды.
    
    cold_water – Входной кран холодной воды (true – открыть, false – закрыть). Позволяет открыть/перекрыть подачу холодной воды в квартиру
    
    hot_water – Входной кран горячей воды (true – открыть, false – закрыть).
    
    washing_machine – Стиральная машина string (“on” – вкл, “off” – выкл). При включении начинает стирать, потом самостоятельно отключается. Может сломаться и протечь.

Датчики (чтение):
------

    air_conditioner –  Кондиционер. (true – вкл, false – выкл).
    
    bedroom_temperature –  Температура в спальне. Int (0 – 80).
    
    bedroom_light –  Лампа в спальне. (true – вкл, false – выкл).
    
    smoke_detector –  Датчик задымления на потолке. (true – задымление, false – нет).
    
    bedroom_presence –  Датчик присутствия в спальне. (true – есть человек, false – нет).
    
    bedroom_motion –  Датчик движения в спальне. (true – есть движение, false – нет).
    
    curtains –  Занавески. string (“open” – открыты, “close” – закрыты, “slightly_open” – приоткрыты вручную).
    
    outdoor_light –  Датчик освещенности за окном (0 – 100).
    
    boiler –  Бойлер. (true – вкл, false – выкл).
    
    boiler_temperature –  Температура горячей воды бойлере. Int (0 – 100 / null). Если перекрыта холодная вода, то воды в бойлере нет, и датчик возвращает null.
    
    cold_water –  Входной кран холодной воды. (true – открыт, false – закрыт).
    
    hot_water –  Входной кран горячей воды. (true – открыт, false – закрыт).
    
    bathroom_light –  Лампа в ванной. (true – вкл, false – выкл).
    
    bathroom_presence –  Датчик присутствия в ванной. (true – есть человек, false – нет).
    
    bathroom_motion –  Датчик движения в ванной. (true – есть движение, false – нет)
    
    washing_machine –  Стиральная машина. string (“on” – вкл, “off” – выкл, “broken” – сломана).
    
    leak_detector –  Датчик протечки воды (true – протечка, false – сухо).
    
Установка
---------  

Установите pipenv https://docs.pipenv.org/

.. code-block:: bash

    $ pip install pipenv


Установите зависимости проекта, включая зависимости для разработки

.. code-block:: bash

    $ pipenv install --dev

Активируйте virtualenv проекта

.. code-block:: bash

    $ pipenv shell

Запустите миграции

.. code-block:: bash

    $ python manage.py migrate

Запуск
------

На главной странице сервиса будет расположена панель управления вашим умным домом.

Для запуска периодического опроса состояния дома, используется celery.

Она запускается как celery -A coursera_house.celery worker -l info -B

Celery использует Redis как брокер, инструкция по установке Redis: https://redis.io/topics/quickstart


Тестирование
------------


Для запуска тестов выполните команду

.. code-block:: bash

    $ py.test tests
